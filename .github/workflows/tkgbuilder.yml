# This is a basic workflow that is manually triggered

name: TKG builder

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  repo:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: archlinux:latest
    
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    
    steps:
      - name: Setup container
        run: |
          echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
          pacman -Syu --noconfirm base-devel sudo git archlinux-keyring wget git-lfs linux-headers
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
          sed -i 's,exit $E_ROOT,echo but you know what you do,' /usr/bin/makepkg
          echo -e "PACKAGER=\"Ihor Yemaiev <mynameiskitsune@proton.me>\"\nGPGKEY=\"128753272FB3D91D\"" >> /etc/makepkg.conf
          
      - uses: actions/checkout@v2
        
      - name: Import GPG
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASS }}
          
      - name: Build kernel TKG
        run: |
          git clone https://github.com/Frogging-Family/linux-tkg.git /tmp/linux
          cd /tmp/linux
          echo "Write config"
          sed -i 's/_cpusched=\"\"/_cpusched=\"pds\"/g' customization.cfg
          sed -i 's/_compiler=\"\"/_compiler=\"llvm\"/g' customization.cfg
          sed -i 's/_lto_mode=\"\"/_lto_mode=\"thin\"/g' customization.cfg
          sed -i 's/_sched_yield_type=\"\"/_sched_yield_type=\"0\"/g' customization.cfg
          sed -i 's/_processor_opt=\"\"/_processor_opt=\"generic_v3\"/g' customization.cfg
          echo | PKGDEST=/tmp/x86_64 makepkg --noconfirm -s --sign

      - name: Compile Nvidia TKG
        run: |
          git clone https://github.com/Frogging-Family/nvidia-all.git /tmp/nvidia
          cd /tmp/nvidia          
          sed -i 's/_open_source_modules=\"\"/_open_source_modules=\"false\"/g' customization.cfg
          sed -i 's/_dkms=\"\"/_dkms=\"true\"/g' customization.cfg
          sed -i 's/_driver_version=\"\"/_driver_version=\"latest\"/g' customization.cfg
          sed -i 's/_driver_branch=\"\"/_driver_branch=\"regular\"/g' customization.cfg
          PKGDEST=/tmp/x86_64 makepkg --noconfirm -s --sign

      - name: Pack db
        run: |
          mv -f /tmp/x86_64/* ${GITHUB_WORKSPACE}/x86_64
          ls -la ${GITHUB_WORKSPACE}
          cd ${GITHUB_WORKSPACE}
          git lfs install
          cd ${GITHUB_WORKSPACE}/x86_64 
          git lfs track "*.pkg.tar.zst"
          repo-add --verify --sign deadyokai.db.tar.gz *.pkg.tar.zst
          yes|eval $RSYNC_COMMAND
        
          
          

